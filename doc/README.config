The user must provide a DTF configuration file for the execution 
that lists the components that are coupled via file I/O and the files
(or filename patterns) that create the inter-component dependency. 
The path to this file should be passed in the dtf_init function in the code.

There are two types of sections in the configuration file: one [INFO] section
 and one or more [FILE] sections. 

*** [INFO] - config should start with the Info section that lists 
    the coupled  components and other general settings

Compulsory settings: 
 
* ncomp - number of components
* comp_name - name of a component, the same name must be passed in
  dtf_init() function. For each component, there should be one line 
  with comp_name.

Optional settings: 

* buffer_data - if set to 1, all the output data is buffered
  inside the DTF. This is useful when it is impossible for some reason
  to guarantee that the user buffers are available/unchanged at the moment
  when the data transfer is performed. This option is ignored for any file 
  whose I/O mode is "file".
  
* iodb_build_mode - specifies how the information about I/O calls is 
  distributed among the processes that arbitrate the data transfer (I/O matchers).
  Possible values: 
  >>> "varid" - processes distributed information about I/O calls among 
  matchers based on the variable id. This setting is not recommended
  if a file has less variables than there are matchers. 
  >>> "range" (default) - each matcher is responsible for arbitrating data 
  transfer for a particular subblock of a variable. Unless DTF_VAR_BLOCK_RANGE 
  environment variable is set, the data array is evenly partitioned into 
  subblocks along the slowest changing dimension and each matcher
  is responsible for a predefined subblock.
  It may be that the number of matchers is bigger than the size of the variable
  in the partitioned dimension. In that case some matchers will not 
  participate in arbitrating I/O for this given variable.
   
* do_checksum - if set to 1, checksum is computed at different stages of data
  transfer. This setting is mostly used for debugging.
  
* log_ioreqs - if set to 1, I/O requests for file output are logged. This 
  setting is mostly used for debugging. 
 
*** [FILE] - each file that creates a dependency between two components, 
    i.e. one component outputs the file and another reads it, 
    must be listed in [FILE] sections, one section per file. 
    If a number of files whose names are created based on some pattern 
    are used for coupling then instead of creating a separate file section, 
    the user may create one section and specify a file name pattern.  Then, 
    all files whose name match the pattern will be treated according to 
    the rule specified in the corresponding file section.  

Compulsory settings: 

* filename - full file name, part of the file name for which the coupling 
  rule specified in this section must be applied. The user can also 
  specify a file name pattern instead where "%" sign may be used to 
  indicate omitted parts in the file name:  e.g. filename="00%/hist.d01%". 
  The string provided in the file name should be long enough to 
  prevent accidental matching of unrelated files. 
  If you want to exclude a file with particular name from coupling but 
  this file name can match a pattern then use exclude_name option. 
  
  NOTE: file path passed to PnetCDF file open/create function as well as the DTF 
  data transfer functions in the program must be identical for both, 
  reader and writer components.
  
* comp1 - one of the two components that are coupled via this file
* comp2 - the other component 
* mode - how the file should be transfered between the components. 
  Possible values: 
  >>> "file" - using File I/O. In that case DTF will simply act as an 
  arbitrator that pauses the reader component until the file it is trying 
  to read is ready, i.e. writer component has performed I/O and has 
  closed the file.
  >>> "transfer" - using direct data transfer

Optional settings: 

* exclude_name - exclude files whose name matches filename pattern but 
  includes a substring in exclude_name. For each substring to exclude
  a separate exclude_name should be stated. 
* write_only - set to 1 if two components only write to a file (mode should be "file")
* replay_io - if coupling happens several times but the I/O pattern is the same every time then 
  this pattern will be recorded during the first dtf_transfer session and replayed in any future 
  transfer sessions: writer processes will skip matching read and write I/O calls and just send 
  the data to readers immediately according to the previously recorded pattern.
* num_sessions - how many time file is opened and closed by given component 
  during the whole execution (default: 1). 
  This option is needed for correct garbade collection. 

************** EXAMPLE CONFIG FILE ************************
[INFO]
ncomp=2
comp_name="scale"
comp_name="letkf"
buffer_data=1   

[FILE]
filename="0%/restart.%"
exclude_name="060000" !init file for first iteration is not part of coupling
comp1="scale"
comp2="letkf"
mode="file"
        
[FILE]
filename="0%/history.%"
comp1="scale"
comp2="letkf"
mode="transfer"
replay_io=1

[FILE]
filename="mean"
exclude_name="060000"
comp1="scale"
comp2="letkf"
mode="file"
write_only=1




