Sections in the config file:

*** [INFO] - config should start with the Info section that lists 
    all workflow components and other general settings

Compulsory settings: 
 
* ncomp - number of components
* comp_name - name of a component, should match the name passed in
  dtf_init() function. For each component, there should be one line 
  with comp_name.

Optional settings: 

* buffered_req_match - if set to 1, all the output data is buffered
  inside the DTF. This is useful when it is impossible for some reason
  to guarantee that the user buffers are available/unchanged at the moment
  when the data transfer is performed. This option is ignored for any file 
  whose I/O mode is "file".
* iodb_build_mode - specifies how the information about I/O calls is 
  distributed among the master processes. Possible values: 
  >>> "varid" - each master is responsible for matching read and write requests
  for a list of variables built based on their id. This setting is recommended
  if a file has many variables. 
  >>> "range" (default) - each master is responsible for matching read and 
  write requests for a particular subblock of a variable. Variable is evenly
  partitioned into subblocks along a predefined dimension (either the first or
  the last one). It may be that the number of masters is so big that no master 
  gets its own partition, then, it will not participate in matching I/O 
  requests for this given variable. 
* do_checksum - if set to 1, checksum is computed at different stages of data
  transfer. This setting is mostly used for debugging.
* log_ioreqs - if set to 1, I/O requests for file output are logged. This 
  setting is mostly used for debugging. 
 
*** [FILE] - each file that creates a dependency between two components, 
    i.e. one component outputs the file and another reads it, 
    must be listed in [FILE] sections, one section per file. A special case
    is possible where the file is not passed between components, but the 
    user wants to disable the output to this file without having to modify 
    the program (using the "ignore_io" setting) is possible. 

Compulsory settings: 

* filename - full path or a part of the file name enough to distinguish 
  it from other files. % sign may be used to indicates omitted parts in 
  the file name: e.g. filename="00%/hist.d01%". Be careful in not giving
  a file name pattern that would accidentally match other unrelated files. 
  
  NOTE: file path passed to file open function as well as the DTF 
  data transfer function in the program must be identical for both, 
  reader and writer components.
* reader - name of the reader component (not needed for files with ignore_io 
  set to 1).
* writer - name of the writer component (not needed for files with ignore_io 
  set to 1).
* mode - how the file should be transfered between the components. Possible 
  values: 
  >>> "file" - using File I/O
  >>> "memory" - using the data transfer
  
  NOTE: if ignore_io is set to 1, mode must be set to "memory" 

Optional settings: 

* exclude_name - exclude files whose name matches filename pattern but 
  includes a substring in exclude_name. For each substring to exclude
  a separate exclude_name should be stated. 
* ignore_io - if set to 1, any write I/O calls to this file will 
  be ignored. 


************** EXAMPLE CONFIG FILE ************************
!This is a config file for SCALE-LETKF
[INFO]
ncomp=2
comp_name="scale"
comp_name="letkf"
buffered_req_match=1   

[FILE]
filename="sprd"
mode="memory"
ignore_io=1

[FILE]
filename="0%/anal.d01%"
exclude_name="060000" !init file for first iteration
exclude_name="sprd"
exclude_name="mean"
writer="scale"
reader="letkf"
mode="file"
        
[FILE]
filename="0%/hist.d01%"
exclude_name="mean"
writer="scale"
reader="letkf"
mode="memory"



